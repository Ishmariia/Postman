// GET запрос на http://162.55.220.72:5005/object_info_3

//2. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

// 3.Спарсить response body в json
let responseInJson = pm.response.json();
responseInJson.name;
responseInJson.age;
responseInJson.salary
responseInJson.family;
responseInJson.family.pets.dog;
responseInJson.family.pets.dog.name;
responseInJson.family.pets.dog.age;

//  4.Спарсить request.
let req = pm.request.url.query.toObject();

let req_name = req.name;
let req_age = req.age;
let req_salary = req.salary



// 5.Проверить, что name в ответе равно name s request (name забрать из request)
pm.test("Name", function () {
    pm.expect(responseInJson.name).to.eql(req_name);
});

// 6.Проверить, что age в ответе равно age s request (age забрать из request)
pm.test("Age", function () {
    pm.expect(responseInJson.age).to.eql(req_age);
});

// 7.Проверить, что salary в ответе равно salary s request (salary забрать из request)
pm.test("Salary", function () {
    pm.expect(String(responseInJson.salary)).to.eql(req_salary);
});

// 8.Вывести в консоль параметр family из response
console.log(responseInJson.family)

// 9.Проверить, что у параметра dog есть параметры name
pm.test("Dog_name", function () {
    pm.expect(responseInJson.family.pets.dog).to.have.property("name");
});

// 10.Проверить, что у параметра dog есть параметры age
pm.test("Dog.age", function () {
    pm.expect(responseInJson.family.pets.dog).to.have.property("age");
});

// 11.Проверить, что параметр name имеет значение Luky
pm.test("Luky", function () {
    pm.expect(responseInJson.family.pets.dog.name).to.eql("Luky");
});

// 12.Проверить, что параметр age имеет значение 4
pm.test("Age_4", function () {
    pm.expect(responseInJson.family.pets.dog.age).to.eql(4);
});

